
///////////////////////////////////////////////////////////////////////////////
//  Copyright Christopher Kormanyos 2013.
//  Distributed under the Boost Software License,
//  Version 1.0. (See accompanying file LICENSE_1_0.txt
//  or copy at http://www.boost.org/LICENSE_1_0.txt)
//

// Program code.
NEW_BUFFER   Buf_402F0400_to_402FDFFF  FROM_FILE      inFile                    -useAreas={{0x402F0400, 0xDC00}}  -setByteOrder=BigEndian
FILL_BUFFER  Buf_402F0400_to_402FDFFF  WITH_FILLER    { 0x00, 0xA0, 0xF0, 0xF7 }

// Create a CRC32 of the program code and place it above the end of the program code.
NEW_CRC      My_Crc32_prog_code        FROM_BUFFER    Buf_402F0400_to_402FDFFF  -useAreas={{0x402F0400, 0xDBFC}}  -setType=Crc32_Afs2
FILL_BUFFER  Buf_402F0400_to_402FDFFF  WITH_CRC       My_Crc32_prog_code        -useAreas={{0x402FDFFC, 0x0004}}

// Optionally zero-cleared DRAM area
NEW_BUFFER   Buf_402FE000_to_402FFFFF  FROM_VALUES  {0x00} -useAreas={{0x402FE000, 0x2000}}

// Include an 8-byte SD card boot header.
// @ 0000 : Size of the (image + header) in bytes: 0x0000FC08
// @ 0004 : Address where to store the raw image:  0x402F0400
// Both values are in LSB format.
NEW_BUFFER   Buf_0000_to_0003  FROM_VALUES    {0x08, 0xFC, 0x00, 0x00}
NEW_BUFFER   Buf_0004_to_0007  FROM_VALUES    {0x00, 0x04, 0x2F, 0x40}

// Create the output hex and binary files.
// Include the SD card boot header in the binary file.
WRITE_FILE   outFile  WITH_BUFFERS  {Buf_402F0400_to_402FDFFF,
                                     Buf_402FE000_to_402FFFFF}  -setFormat=IntelHexExtended
WRITE_FILE   binFile  WITH_BUFFERS  {Buf_402F0400_to_402FDFFF,
                                     Buf_402FE000_to_402FFFFF}  -setFormat=RawBinary
WRITE_FILE   mloFile  WITH_BUFFERS  {Buf_0000_to_0003,
                                     Buf_0004_to_0007,
                                     Buf_402F0400_to_402FDFFF,
                                     Buf_402FE000_to_402FFFFF}  -setFormat=RawBinary
