#
#  Copyright Christopher Kormanyos 2013 - 2021.
#  Distributed under the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt
#  or copy at http://www.boost.org/LICENSE_1_0.txt)
#

# ------------------------------------------------------------------------------
# compiler flags for the target architecture
# ------------------------------------------------------------------------------

GCC_VERSION   = 10.2.1
GCC_TARGET    = arm-none-eabi
GCC_PREFIX    = arm-none-eabi

TGT_SUFFIX    = elf

TGT_ALLFLAGS  = -O2                                                               \
                -finline-functions                                                \
                -finline-limit=32                                                 \
                -march=armv7-a                                                    \
                -mtune=cortex-a8                                                  \
                -marm                                                             \
                -mfloat-abi=hard                                                  \
                -mfpu=neon                                                        \
                -ffast-math

TGT_CFLAGS    = -std=c99                                                          \
                -Wunsuffixed-float-constants                                      \
                $(TGT_ALLFLAGS)

TGT_CXXFLAGS  = -std=c++11                                                        \
                $(TGT_ALLFLAGS)

TGT_INCLUDES  = -I$(PATH_APP)/util/STL

TGT_AFLAGS    =

TGT_LDFLAGS   = -nostartfiles                                                     \
                -Wl,--gc-sections                                                 \
                -Wl,-Map,$(APP).map                                               \
                -T $(LINKER_DEFINITION_FILE)

HEX_MANIP = $(PATH_TOOLS)\generic\hex_tools\HexManip.exe

HEX_MANIP_SCRIPT_FILE = $(PATH_TGT_MAKE)/$(TGT)_hex_manip_script.hxm

RULE_SPECIAL_MAKE_IMAGE_FILE := $(HEX_MANIP) outFile=$(APP)_flash.hex mloFile=$(PATH_BIN)/MLO binFile=$(APP)_flash.bin inFile=$(APP).hex elfFile=$(APP).elf $(HEX_MANIP_SCRIPT_FILE)
