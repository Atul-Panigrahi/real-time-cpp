
bin/led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000092  00000106  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vectors  00000004  00000000  00000000  00000074  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .startup      00000060  00000004  00000004  00000078  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text         0000002e  00000064  00000064  000000d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .bss          00000002  00800100  00000092  00000106  2**0
                  ALLOC
  5 .comment      00000011  00000000  00000000  00000106  2**0
                  CONTENTS, READONLY

Disassembly of section .isr_vectors:

00000000 <isr_vectors>:
   0:	0e 94 02 00 	call	0x4	; 0x4 <__my_startup>

Disassembly of section .startup:

00000004 <__my_startup>:
   4:	11 24       	eor	r1, r1
   6:	1f be       	out	0x3f, r1	; 63
   8:	c0 e0       	ldi	r28, 0x00	; 0
   a:	d8 e0       	ldi	r29, 0x08	; 8
   c:	de bf       	out	0x3e, r29	; 62
   e:	cd bf       	out	0x3d, r28	; 61
  10:	0e 94 11 00 	call	0x22	; 0x22 <__do_copy_data>
  14:	0e 94 1d 00 	call	0x3a	; 0x3a <__do_clear_bss>
  18:	0e 94 26 00 	call	0x4c	; 0x4c <__do_global_ctors>
  1c:	0e 94 37 00 	call	0x6e	; 0x6e <main>
  20:	ff cf       	rjmp	.-2      	; 0x20 <__my_startup+0x1c>

00000022 <__do_copy_data>:
  22:	11 e0       	ldi	r17, 0x01	; 1
  24:	a0 e0       	ldi	r26, 0x00	; 0
  26:	b1 e0       	ldi	r27, 0x01	; 1
  28:	e2 e9       	ldi	r30, 0x92	; 146
  2a:	f0 e0       	ldi	r31, 0x00	; 0
  2c:	02 c0       	rjmp	.+4      	; 0x32 <__do_copy_data+0x10>
  2e:	05 90       	lpm	r0, Z+
  30:	0d 92       	st	X+, r0
  32:	a0 30       	cpi	r26, 0x00	; 0
  34:	b1 07       	cpc	r27, r17
  36:	d9 f7       	brne	.-10     	; 0x2e <__do_copy_data+0xc>
  38:	08 95       	ret

0000003a <__do_clear_bss>:
  3a:	11 e0       	ldi	r17, 0x01	; 1
  3c:	a2 e0       	ldi	r26, 0x02	; 2
  3e:	b1 e0       	ldi	r27, 0x01	; 1
  40:	01 c0       	rjmp	.+2      	; 0x44 <__SREG__+0x5>
  42:	1d 92       	st	X+, r1
  44:	a2 30       	cpi	r26, 0x02	; 2
  46:	b1 07       	cpc	r27, r17
  48:	e1 f7       	brne	.-8      	; 0x42 <__SREG__+0x3>
  4a:	08 95       	ret

0000004c <__do_global_ctors>:
  4c:	10 e0       	ldi	r17, 0x00	; 0
  4e:	c6 e6       	ldi	r28, 0x66	; 102
  50:	d0 e0       	ldi	r29, 0x00	; 0
  52:	04 c0       	rjmp	.+8      	; 0x5c <__do_global_ctors+0x10>
  54:	22 97       	sbiw	r28, 0x02	; 2
  56:	fe 01       	movw	r30, r28
  58:	0e 94 33 00 	call	0x66	; 0x66 <__ctors_end>
  5c:	c4 36       	cpi	r28, 0x64	; 100
  5e:	d1 07       	cpc	r29, r17
  60:	c9 f7       	brne	.-14     	; 0x54 <__do_global_ctors+0x8>
  62:	08 95       	ret

Disassembly of section .text:

00000064 <__ctors_start>:
  64:	40 00       	.word	0x0040	; ????

00000066 <__ctors_end>:
  66:	05 90       	lpm	r0, Z+
  68:	f4 91       	lpm	r31, Z
  6a:	e0 2d       	mov	r30, r0
  6c:	09 94       	ijmp

0000006e <main>:
  6e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
  72:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_end>
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	80 81       	ld	r24, Z
  7a:	89 27       	eor	r24, r25
  7c:	80 83       	st	Z, r24
  7e:	fc cf       	rjmp	.-8      	; 0x78 <main+0xa>

00000080 <_GLOBAL__sub_I_main>:
  80:	e0 e0       	ldi	r30, 0x00	; 0
  82:	f1 e0       	ldi	r31, 0x01	; 1
  84:	85 e2       	ldi	r24, 0x25	; 37
  86:	80 83       	st	Z, r24
  88:	80 e2       	ldi	r24, 0x20	; 32
  8a:	81 83       	std	Z+1, r24	; 0x01
  8c:	2d 98       	cbi	0x05, 5	; 5
  8e:	25 9a       	sbi	0x04, 5	; 4
  90:	08 95       	ret
